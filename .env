# =============================================================================
# SMART WASTE MANAGEMENT SYSTEM - ENVIRONMENT CONFIGURATION
# =============================================================================

# Django Settings
# =============================================================================
DEBUG=True
SECRET_KEY=your-super-secret-key-change-this-in-production-django-secret-key-123456789
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,your-domain.com

# Django Environment
DJANGO_ENVIRONMENT=development
# Options: development, staging, production

# Database Configuration
# =============================================================================
# SQLite (Default - for development)
DATABASE_URL=sqlite:///db.sqlite3

# PostgreSQL (Recommended for production)
# DATABASE_URL=postgres://username:password@localhost:5432/smart_waste_db
# DB_NAME=smart_waste_db
# DB_USER=postgres
# DB_PASSWORD=your_db_password
# DB_HOST=localhost
# DB_PORT=5432

# MySQL (Alternative option)
# DATABASE_URL=mysql://username:password@localhost:3306/smart_waste_db
# DB_ENGINE=django.db.backends.mysql
# DB_NAME=smart_waste_db
# DB_USER=mysql_user
# DB_PASSWORD=your_mysql_password
# DB_HOST=localhost
# DB_PORT=3306

# Google Gemini AI Configuration
# =============================================================================
# Get your API key from: https://makersuite.google.com/app/apikey
GOOGLE_GEMINI_API_KEY=AIzaSyA-Fhz-5qYIfucntC7EDBKiVxzzrcVxrdo

# Gemini Model Configuration
GEMINI_MODEL_NAME=gemini-1.5-flash
# Options: gemini-pro, gemini-pro-vision, gemini-1.5-flash, gemini-1.5-pro

# Gemini API Settings
GEMINI_TEMPERATURE=0.7
GEMINI_TOP_P=0.8
GEMINI_TOP_K=10
GEMINI_MAX_OUTPUT_TOKENS=2048

# Media and Static Files Configuration
# =============================================================================
MEDIA_URL=/media/
MEDIA_ROOT=media
STATIC_URL=/static/
STATIC_ROOT=staticfiles
STATICFILES_STORAGE=django.contrib.staticfiles.storage.StaticFilesStorage

# File Upload Settings
FILE_UPLOAD_MAX_MEMORY_SIZE=10485760
# 10MB in bytes
DATA_UPLOAD_MAX_MEMORY_SIZE=10485760
FILE_UPLOAD_PERMISSIONS=0o644

# Image Processing Settings
# =============================================================================
IMAGE_MAX_SIZE=5242880
# 5MB in bytes
IMAGE_ALLOWED_FORMATS=JPEG,JPG,PNG,WEBP,BMP
IMAGE_QUALITY=85
IMAGE_RESIZE_MAX_WIDTH=1920
IMAGE_RESIZE_MAX_HEIGHT=1080

# Security Settings
# =============================================================================
# HTTPS Settings (Enable in production)
SECURE_SSL_REDIRECT=False
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=False
SECURE_HSTS_PRELOAD=False
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_BROWSER_XSS_FILTER=True
X_FRAME_OPTIONS=DENY

# Session Security
SESSION_COOKIE_SECURE=False
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Lax
SESSION_EXPIRE_AT_BROWSER_CLOSE=True
SESSION_COOKIE_AGE=3600

# CSRF Protection
CSRF_COOKIE_SECURE=False
CSRF_COOKIE_HTTPONLY=True
CSRF_COOKIE_SAMESITE=Lax
CSRF_TRUSTED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000

# Email Configuration
# =============================================================================
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
# For development - prints emails to console

# SMTP Configuration (for production)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.gmail.com
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-password
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_USE_SSL=False
# DEFAULT_FROM_EMAIL=Smart Waste Management <noreply@smartwaste.com>

# Logging Configuration
# =============================================================================
LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

DJANGO_LOG_LEVEL=INFO
GEMINI_LOG_LEVEL=INFO
DATABASE_LOG_LEVEL=WARNING

# Log file paths
LOG_FILE_PATH=logs/django.log
ERROR_LOG_FILE_PATH=logs/errors.log

# Cache Configuration
# =============================================================================
# Default cache (development)
CACHE_BACKEND=django.core.cache.backends.locmem.LocMemCache

# Redis cache (recommended for production)
# CACHE_BACKEND=django.core.cache.backends.redis.RedisCache
# REDIS_URL=redis://localhost:6379/1
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_DB=1
# REDIS_PASSWORD=

# Memcached cache (alternative)
# CACHE_BACKEND=django.core.cache.backends.memcached.PyLibMCCache
# MEMCACHED_LOCATION=127.0.0.1:11211

# API Rate Limiting
# =============================================================================
API_RATE_LIMIT_PER_MINUTE=60
API_RATE_LIMIT_PER_HOUR=1000
API_RATE_LIMIT_PER_DAY=10000

# Gemini API rate limiting
GEMINI_REQUESTS_PER_MINUTE=15
GEMINI_REQUESTS_PER_DAY=1500

# Monitoring and Analytics
# =============================================================================
# Sentry Error Tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Google Analytics (optional)
# GOOGLE_ANALYTICS_ID=GA-XXXX-X

# Application Performance Monitoring
# NEW_RELIC_LICENSE_KEY=your-new-relic-key

# Third-party Integrations
# =============================================================================
# AWS S3 (for file storage in production)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_STORAGE_BUCKET_NAME=smart-waste-media
# AWS_S3_REGION_NAME=us-east-1
# AWS_S3_CUSTOM_DOMAIN=your-cloudfront-domain.cloudfront.net
# AWS_DEFAULT_ACL=public-read

# Cloudinary (alternative for image storage)
# CLOUDINARY_CLOUD_NAME=your-cloud-name
# CLOUDINARY_API_KEY=your-api-key
# CLOUDINARY_API_SECRET=your-api-secret

# SMS Notifications (optional)
# TWILIO_ACCOUNT_SID=your-twilio-account-sid
# TWILIO_AUTH_TOKEN=your-twilio-auth-token
# TWILIO_PHONE_NUMBER=+1234567890

# Application-specific Settings
# =============================================================================
# App metadata
APP_NAME=Smart Waste Management System
APP_VERSION=1.0.0
APP_DESCRIPTION=AI-powered waste classification system
ADMIN_EMAIL=admin@smartwaste.com
SUPPORT_EMAIL=support@smartwaste.com

# Feature flags
ENABLE_API_DOCS=True
ENABLE_USER_REGISTRATION=False
ENABLE_EMAIL_NOTIFICATIONS=True
ENABLE_SMS_NOTIFICATIONS=False
ENABLE_ANALYTICS=True

# Classification settings
DEFAULT_CONFIDENCE_THRESHOLD=0.7
MAX_IMAGE_UPLOADS_PER_DAY=100
ENABLE_BATCH_PROCESSING=False

# Backup and Maintenance
# =============================================================================
# Database backup settings
DB_BACKUP_ENABLED=True
DB_BACKUP_SCHEDULE=0 2 * * *
# Cron format: daily at 2 AM
DB_BACKUP_RETENTION_DAYS=30

# Maintenance mode
MAINTENANCE_MODE=False
MAINTENANCE_MESSAGE=System is under maintenance. Please try again later.

# Development and Testing
# =============================================================================
# Django Debug Toolbar (development only)
ENABLE_DEBUG_TOOLBAR=True

# Testing settings
TEST_DATABASE_NAME=test_smart_waste
SKIP_GEMINI_IN_TESTS=True
USE_MOCK_GEMINI_RESPONSES=True

# Fixtures and sample data
LOAD_SAMPLE_DATA=True
SAMPLE_DATA_PATH=fixtures/sample_waste_data.json

# Internationalization
# =============================================================================
LANGUAGE_CODE=en-us
TIME_ZONE=Asia/Kolkata
USE_I18N=True
USE_L10N=True
USE_TZ=True

# Supported languages
# LANGUAGES=en,hi,te,ta,bn,gu,mr,kn,ml,pa

# =============================================================================
# PRODUCTION OVERRIDES
# =============================================================================
# Uncomment and modify these settings for production deployment

# DEBUG=False
# SECRET_KEY=production-secret-key-very-long-and-random
# ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com
# DATABASE_URL=postgres://user:pass@prod-db-host:5432/prod_db
# SECURE_SSL_REDIRECT=True
# SECURE_HSTS_SECONDS=31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True
# SECURE_HSTS_PRELOAD=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# =============================================================================
# NOTES:
# 1. Never commit this file with real credentials to version control
# 2. Use environment-specific .env files (.env.development, .env.production)
# 3. For production, use a secure secret management service
# 4. Regularly rotate API keys and passwords
# 5. Monitor API usage and costs, especially for Gemini API
# =============================================================================
